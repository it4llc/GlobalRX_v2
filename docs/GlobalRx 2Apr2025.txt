The project will create a modular platform to be used for conducting global screening.  There would be 4 modules:1 – User Admin: Create, edit and disable internal users.2 – Configuration module used for global configurations3 – Customer configurations used for customer specific information4 – Candidate workflow/application used to gather data from a candidate* Each module should be independent and use APIs to communicate with other modules when necessary.* Create a style sheet to show buttons, dropdowns, page formatting, fonts, colors, etc.  These styles would then be used throughout the platform in each module.* One login would be used to access each module as well as parts within the module, based on user permissions.* UI would be tabular.  Each Module will be a tab, and there will be subtabs on some modules.* The module 4 for candidate workflow/application will be multilingual and allow for translation of all UI labels using resource bundles.  The default language will be English.  Other languages would be added through a tab that would display all labels and allow for a language to be added, edited or disabled.Module 1: User Admin:This module will just have 1 tab called login.  The page should have the ability	to:1. Add/edit/delete users2. Email (username)3. Password4. Permissions:i. Countriesii. Servicesiii. DSXiv. CustomersModule 2: Global ConfigurationsTab 1: Locationsb. Based on ISO list, and have a primary key plus the following columns:i. Country nameii. 2_letteriii. 3_letteriv. Numericv. Subregion1vi. Subregion2vii. Subregion3c. The subregion values may be blank.d. The data for this table will initially be provided by a spreadsheet.e. For users with the Countries permission, the tab should allow for the ability to add, edit and delete records.f. This location list would be used as the basis for location drop downs on other tabs and in other modules.  In some cases, only the country list will be used.g. Functionality for phase 2:h. If a country were added or disabled, there should be an alert if this impacted other areas of the site.  Tab 2: Servicesi. Add/edit/disablej. No deletek. Can have same name – use primary keyl. Fields:i. Service nameii. Service categoryiii. Service descriptioniv. Functionality type (preset list of verification, record, other)Tab 3: Data RequirementsThis tab will allow the user to create, edit and disable data requirements.  At the top part of the tab a user can create a new requirement.  In the bottom part would be a table of existing requirements.* When creating a new requirement, the user would have the following options:* Requirement type:1. Data fields2. Documents3. Forms* When adding a new data field, the user should be prompted to enter the following:1. Field label2. Short name, which is a very brief name for the data3. Data type which would display a list of database field types4. Instructions, which would be displayed by a hover over effect5. Retention Handling: with drop down choices of:* Don’t delete* Delete at customer rule* Delete at global ruleWhen creating a new document the user would be prompted for:1. Document Name2. Instructions3. Select Per Case, per Search Type or per Search in a drop down menu4. Have the option to upload a PDF file for the document5. Retention Handling: with drop down choices of:i. Don’t deleteii. Delete at customer rule1. Delete at global rule6. The form functionality will be added later.The data requirements should be a standalone feature in that making changes elsewhere should not impact the requirements.Tab 4: DSXThis section would be used to define what data fields and what documents/attachments are required to be provided for a specific search.  The requirements can vary based on the country, the subregion (eg state, province, territory), the 2nd level subregion (such as county) or the 3rd level subregion, ie city.  Functionality:* Within the DSX tab, there should be a drop down that lists all of the available searches per the Services tab.  * When a service is selected, the user should then be shown a list of all possible search requirements with checkboxes.  Requirements that are already associated with the service will be checked.  A user can check additional requirements and then click on a Apply Requirements button to associate them with a service.  Unchecking a requirement and then clicking on Apply Requirements will unassociate requirements from that service.* Below this there should be a search requirements table/grid displayed to assign requirements to locations.* Along the vertical axis, a list of locations should be displayed.* The list should show all countries in alphabetical order.  Next to each country should be a down arrow.  Clicking on the down arrow would expand the table to show any available subregion I locations.* Next to each subregion I should be a down arrow.  Clicking on the down arrow would expand the table to show any available subregion II locations.* Next to each subregion II should be a down arrow.  Clicking on the down arrow would expand the table to show any available subregion III locations.* The search requirements table will have check boxes in it so that the user can select which requirements are applicable for the selected service in each location.* In the country, subregion I, and subregion II sections, there will be an initial row labeled ALL.  Selecting this will disable ALL checkboxes below it in all levels.Tab 4: TranslationsTranslations Functionality SummaryOverviewThe GlobalRx platform includes a comprehensive translations system that enables multilingual support across the application. This system allows administrators to manage translations for all text content through an intuitive interface and supports importing/exporting translations via CSV files.Key FeaturesTranslation Management Interface* By Keys View: Displays translation keys with corresponding values for all supported languages in a scrollable table format* By Languages View: Organizes translations by language for focused editing of specific language content* Search Functionality: Allows filtering translation keys and content to quickly find specific text* Inline Editing: Supports direct editing of translation values with multi-line text areasLanguage Management* Add New Language: Administrators can add new language support without technical knowledge* Language Configuration: System automatically manages language configuration files* Default Values: New languages are initialized with empty translations based on the English key setImport/Export Capabilities* CSV Export: Exports all translations to a standard CSV format for external editing* CSV Import: Imports translations from properly formatted CSV files* Translation Merging: Intelligently merges imported translations with existing contentTechnical Implementation* Server-side Storage: Translation files are stored as JSON on the server* Client-side Caching: Translations are cached for performance optimization* Context-based Access: Translations are accessible throughout the application via a context provider* API-driven Updates: All changes are persisted through secure API endpointsUI Considerations* Responsive Design: Translation tables adapt to different screen sizes with fixed key columns* Horizontal Scrolling: Accommodates growing language support through efficient horizontal scrolling* Sticky Headers: Keeps key column visible during horizontal navigationUser Workflow1. Administrators access the Translations tab within the Global Configurations module2. They can add new translation keys with default English values3. Translations can be added for each supported language4. Changes are saved per language5. For bulk operations, translations can be exported to CSV, edited externally, and imported backThis translations system ensures GlobalRx can serve users worldwide with a consistent experience in their preferred language while providing administrators with straightforward tools to maintain multilingual content.Module 3: Customer Configurations:Tab 1: Customer EditThis would be used to create customer accounts.  Functionality:* There should be the ability to add/edit/disable customers.  * There should be a basic info section to capture information like address, contact details, etc.* There should be an invoicing section to capture invoice terms, invoice contact and method of invoice delivery and other relevant information.* Table to note which services are allowed to be ordered by a customer.  This would pull from the Services available in the Global Configurations section Tab 2: Customer ScopeThis tab would be used to set up which services the customer can order.  Functionality:* Create customer accounts.  For now, just a customer name would be required.  Please include other fields that make sense.* Have the ability to denote if all services are available for a customer, or to select specific services to be available for the customer* Within a customer account have the Ability to create packages and provide a package name.* Ability to note which services should be included in a package by using checkboxes with a table of services which were made available for the customer* Ability to define the scope for each service in a package.  * The scope should be set from a drop down menu:o Verification-edu:* Highest Degree, post high school* Highest Degree, inc. high school* All degrees post high schoolo Verifications-emp:* Most recent employment* Most recent X employments (Prompt user for the number)* All employments in past X years (Prompt user for the number)o Records:* Current address* Last X addresses (Prompt user for the number)* Last X years (Prompt user for the number)o Other – this will not have scope defined for now.